

macro "Select Background [1]"
{


open();
var4 = File.nameWithoutExtension;
var44 = File.name;
dir3 = getDirectory("Choose parent directory for saving - background");
setTool("brush");
selectWindow(var44);
waitForUser("Make background selection");
run("ROI Manager...");
roiManager("Add");
roiManager("Measure");
var1 = getResult("Mean");
var2 = getResult("StdDev");
thresh = var1+5*var2;			//value of threshold = 15 standard dev above background mean

//JAEJIN: to change the threshold of what counts for a positive region or negative region, change the above line of code

saveAs("Results", dir3+var4+"_background_results.txt");	 // saves text version of results
roiManager("Save", dir3+var4+"_background_roi.zip");		// saves actual roi
roiManager("Delete");
run("Close");
close();


	//dir3 = getDirectory("Choose parent directory for saving");
	//waitForUser("Select file you would like to analyze");
	//open();
	open(dir3+var44);
	var11 = File.name;
	var12 = File.nameWithoutExtension;
	dir2 = File.directory;
	run("Duplicate...", " ");
	selectWindow(var11);

	run("Set Measurements...", "area mean standard min centroid integrated limit redirect=None decimal=3");
	run("Gaussian Blur...", "sigma=1 stack");
	run("Maximum...", "radius=.1");
	run("Despeckle");

//above 3 lines clean up the image a little bit and try to remove any small artifacts

	setThreshold(thresh, 255);

	run("Convert to Mask");

  	run("Despeckle");

	run("Watershed");


setTool("brush");
selectWindow(var12+"-1.tif");

t2 = getString("Have artifacts already been identified for this stitched image? (yes = 1)","");
if (t2 == 1){
	open();
}

//roiManager("Open", path+filename.zip);
waitForUser("Select artifacts to delete, if applicable");


t1 = getString("Would you like to delete something? (yes = 1)","");
if (t1== 1){
	selectWindow(var11);
	run("Restore Selection");
	run("ROI Manager...");
	roiManager("Add");
	if (t2 == 1){
		roiManager("Select", 0);
		roiManager("Delete");
	}
	roiManager("Save", dir3+var12+"_artifacts_removed.zip");	// saves roi of areas of artifacts that were deleted
	selectWindow(var11);
	roiManager("Select", 0);
	run("Clear", "slice");
	run("Invert");
	selectWindow(var12+"-1.tif");
	run("Select None");
}

selectWindow(var11);
run("Select None");

run("Analyze Particles...", "size=15-Infinity circularity=0.00-1.00 show=Nothing clear add stack");

//JAEJIN: change the "size" parameter above to determine the threshold for size of regions to be analyzed ... above is 10 pixels and above, so any little specks of artifact are removed, but this is still a pretty small limit


selectWindow(var12+"-1.tif");
roiManager("Show None");
roiManager("Show All without labels");
setTool("hand");
waitForUser("Check to see if analysis is correct");

roiManager("Save", dir3+var12+"_cell_selections.zip");	 // saves cell selection roi

roiManager("Deselect");
roiManager("Combine");
run("Clear Outside");
roiManager("Fill");

var13 = dir3+var12+"_cells_xy_coord.txt";

run("Save XY Coordinates...", "background=0 invert save=&var13");
//above saves xy coordinates as are found in imageJ with origin at top left NOT lower left like normal
//this was done so it could be easy to determine if xy coordinates are appropriate in imageJ
//if you want to change to typical xy coordinate, just delete "invert" in the line above

roiManager("Delete");
run("Close");
close("*");	//closes all image windows


}













